--first I downloaded spotify data from kaggle referring to top 50 songs of 2021
--then imported that into sqllitestudio using this table to ask questions and aagregate the data--

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )


select *
from bit_db.spotifydata
;

--what is the most popular song? and who is the arist?--
select track_name, popularity, artist_name
from bit_db.Spotifydata
order by popularity desc
limit 1
;

--what is the most common value between the top 5 songs? (seems that they're all in the same time signature, have >.5 danceability, and most are >105 tempo)--
select *
from bit_db.Spotifydata
order by popularity desc
limit 5
;

--which song has the fastest tempo, where does it sit on the popularity scale?--
select tempo, track_name, artist_name, popularity
from bit_db.Spotifydata
order by tempo desc
limit 1
;

--what is the longest song?--
select track_name, artist_name, duration_ms
from bit_db.Spotifydata
order by duration_ms desc
limit 1
;

--what is the average danceability?--
select avg(danceability) 
from bit_db.Spotifydata
;

--lowest danceability?--
select min(danceability), track_name
from bit_db.spotifydata
limit 1
;

--what is the average loudness of all songs?--
select avg(loudness)
from bit_db.spotifydata
;

--where do most songs fall on the loudness scale compared to the average value?--
select track_name, loudness, case 
when loudness <= -6.5 then 'quieter than'
when loudness <= -5 then  'avg'
when loudness >= -4.9 then 'louder than'
end as loudness_scale
from bit_db.spotifydata
order by loudness asc
;


--does loudness correspond to popularity?--
select popularity, track_name, loudness
from bit_db.Spotifydata
order by loudness desc
limit 5
;

--average danceability of all the songs?--
select avg(danceability) 
from bit_db.spotifydata
;

--is danceability tied to energy?--
select energy, danceability
from bit_db.spotifydata
order by danceability desc
limit 5
;

--is valence high in the top 5 popular tracks?--
select valence
from bit_db.spotifydata
order by valence desc
;
select avg(valence)
from bit_db.spotifydata
;
select popularity, track_name, valence
from bit_db.Spotifydata
order by popularity desc
limit 5
;

--is there a link between instrumentalness and danceability?--
select avg(instrumentalness), avg(danceability)
from bit_db.Spotifydata
;
select danceability, instrumentalness
from bit_db.spotifydata
order by danceability desc
limit 10
;
--what is the average popularity of the artists, and if they're above 90 they fall under the 'top star' category?
with popular_avg_cte as (
select s.artist_name, avg(s.popularity) as avg_pop
from spotifydata as s
group by s.artist_name
)
select artist_name, avg_pop, 'Top Star' as tag
from popular_avg_cte
where avg_pop >= 90
order by avg_pop desc
limit 5
;
